<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:media="http://search.yahoo.com/mrss/">
<channel>
<title>impress your cat</title>
<link>http://zhuanlan.zhihu.com/impress-your-cat</link>
<description>Erlang, the Bananarama of languages, is a language out of Sweden that can be used to build web scale, asynchronous, non-blocking, sharded, event driven, message passing, NoSQL, reliable, highly available, high performance, real time, clusterable, bad ass, rock star, get the girls, get the boys, impress your mom, impress your cat applications.</description>
<language>zh-cn</language>
<lastBuildDate>Mon, 07 Mar 2016 21:17:18 +0800</lastBuildDate>
<image>
<url>https://pic2.zhimg.com/b7567464789337f354d554ea0dbd28b5_xl.jpg</url>
<title>impress your cat</title>
<link>http://zhuanlan.zhihu.com/impress-your-cat</link>
</image>
<item>
<title>Awesome Ancient Chinese Books</title>
<link>http://zhuanlan.zhihu.com/impress-your-cat/20627628</link>
<description>&lt;p&gt;&lt;a class=&quot; wrap external&quot; href=&quot;https://link.zhihu.com/?target=https%3A//github.com/bhuztez/awesome-ancient-chinese-books&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;GitHub - bhuztez/awesome-ancient-chinese-books: A curated list of awesome chinese books&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;暂时没时间维护。先把坑挖开，&lt;b&gt;求支持&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;目标就是整理个目录，把网上能找到的古籍的地址按书名记录好，以便查阅。 &lt;/p&gt;&lt;p&gt;主要是为了以后开发中文编程语言时有据可循，而不是自己胡编乱造&lt;/p&gt;&lt;p&gt;就是这样&lt;/p&gt;</description>
<author>bhuztez</author>
<guid isPermaLink="false">20627628</guid>
<pubDate>Mon, 07 Mar 2016 20:21:45 +0800</pubDate>
<media:thumbnail url="" />
</item>
<item>
<title>[黑魔法]Python模拟HTML表单提交</title>
<link>http://zhuanlan.zhihu.com/impress-your-cat/20612720</link>
<description>&lt;p&gt;application/x-www-form-urlencoded这种比较简单就不讨论了。&lt;/p&gt;&lt;p&gt;multipart/form-data就比较麻烦了。搜了一下结果发现要么是远古时期的，要么就是推荐requests。有必要这么麻烦么？Python明明自带MIME库了，为啥就没人推荐用标准库的方法？只能自己来了&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;urllib2&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Request&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;email.message&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Message&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;Content-Type&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;multipart/form-data&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_payload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;_write_headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_generator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# DARK MAGIC followed&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;Content-Disposition&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;form-data&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_payload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;make_request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;form_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;form_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iteritems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;as_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# THIS IS A SEPARATION BARRIER&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# NEVER LET CODE MOVE ACROSS THIS&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;Content-Type&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;Content-Type&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt; 就是这样&lt;/p&gt;</description>
<author>bhuztez</author>
<guid isPermaLink="false">20612720</guid>
<pubDate>Tue, 01 Mar 2016 20:32:54 +0800</pubDate>
<media:thumbnail url="" />
</item>
<item>
<title>barelibc问题修复及其他</title>
<link>http://zhuanlan.zhihu.com/impress-your-cat/20521163</link>
<description>&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/bhuztez/barelibc&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;bhuztez/barelibc&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;在&lt;a class=&quot;internal&quot; href=&quot;https://www.zhihu.com/question/39519315/answer/81747490&quot;&gt;为什么链接时__libc_start_main和__syscall行为不同？ - bsdelf 的回答&lt;/a&gt;的启发下，我把 __syscall 挪到 crt1.o 里去了，免得被覆盖还不知道。&lt;/p&gt;&lt;p&gt;之前可能没提用barelibc也可以支持一部分C++了。注意编译的命令是 gcc 而不是 g++，不然会链接 libstdc++ ，就见鬼了。&lt;/p&gt;&lt;p&gt;--------------------------&lt;/p&gt;&lt;p&gt;正式开始在刷题的库。主要卖点是写完运行一行命令可以生成能提交到OJ的代码。在正式发布之前暂时不会公开源代码。假如你手上有很多现成优质代码捐赠给我，那果断加入吧。&lt;br&gt;&lt;/p&gt;&lt;p&gt;没代码，你也可以来完善这个TODO list。目标是收集各种topic，可能出现的题型，以及每个题型一个例题。以便我的库能覆盖所有常见题型。&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;a class=&quot; wrap external&quot; href=&quot;https://link.zhihu.com/?target=https%3A//github.com/bhuztez/oj-solutions/blob/master/TODO.md&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;oj-solutions/TODO.md at master · bhuztez/oj-solutions · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;欢迎Pull Request &lt;/p&gt;&lt;p&gt;--------------------------&lt;/p&gt;&lt;p&gt;另外，第6个21天的更新会和第7个21天一起发布&lt;/p&gt;</description>
<author>bhuztez</author>
<guid isPermaLink="false">20521163</guid>
<pubDate>Thu, 21 Jan 2016 22:45:21 +0800</pubDate>
<media:thumbnail url="" />
</item>
<item>
<title>向OJ提交编译出来的汇编代码</title>
<link>http://zhuanlan.zhihu.com/impress-your-cat/20494114</link>
<description>&lt;p&gt; 比如 x.c 的内容如下&lt;br&gt;&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;&lt;span class=&quot;n&quot;&gt;asm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;.globl main&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;.type main,@function&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&quot;main:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;movl $1,%eax&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;编译，运行，可以看到退出代码确实是1&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;$ gcc -o x x.c
$ ./x
$ echo $?
1
$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;所以，理论上我们只需要把汇编代码，改写成C语言字符串就好了。&lt;/p&gt;&lt;p&gt;用 gcc -S -o- x.c 就能看到编译出来的汇编代码了&lt;/p&gt;&lt;p&gt;可是，发现在某些运行在Windows的OJ(用老版本的MinGW gcc)提交这些汇编代码时，会编译不过去，提示缺少 ___chkstk_ms ，假如关掉这个会导致程序出错。参考&lt;a class=&quot; wrap external&quot; href=&quot;https://link.zhihu.com/?target=https%3A//stackoverflow.com/questions/8400118/what-is-the-purpose-of-the-chkstk-function&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;c++ - What is the purpose of the _chkstk() function?&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;假设当前函数栈横跨 B - E ，假如直接跳过C页访问D页，就出错了&lt;br&gt;&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;  A    B    C    D    E
+----+----+----+----+----
|    |    |    |    |
+----+----+----+----+----
       |         ^     |-&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;暂时的办法就是直接抄一份现在版本的代码进去，反正也不长&lt;/p&gt;&lt;p&gt;&lt;a class=&quot; wrap external&quot; href=&quot;https://link.zhihu.com/?target=https%3A//github.com/mirror/mingw-w64/blob/cf136d93e41ffff7f593230e20c5854a68322b5d/mingw-w64-libraries/winpthreads/src/libgcc/dll_dependency.S&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;mingw-w64/dll_dependency.S at cf136d93e41ffff7f593230e20c5854a68322b5d · mirror/mingw-w64 · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;那C++怎么办？不同的libstdc++可能有不小的区别。需要关掉一些C++的功能，使得用gcc也能正常链接C++代码就没问题了。也就是使用以下命令编译&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;gcc -fno-rtti -fno-exceptions
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;-----------------------------------------------------------------------&lt;/p&gt;&lt;p&gt;这样生成出来的汇编代码很长，尝试压缩。比如&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;&lt;span class=&quot;n&quot;&gt;asm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;...movl...&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt; 可以替换成&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#define M &quot;movl&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;asm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;...&quot;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;...&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这么做的好处是不需要考虑escape什么的。 可是压缩率不太行，找了几个文件试了一下，仅仅在10%-15%之间。&lt;/p&gt;</description>
<author>bhuztez</author>
<guid isPermaLink="false">20494114</guid>
<pubDate>Tue, 12 Jan 2016 18:57:45 +0800</pubDate>
<media:thumbnail url="" />
</item>
<item>
<title>Coq sucks.</title>
<link>http://zhuanlan.zhihu.com/impress-your-cat/20441953</link>
<description>&lt;p&gt;珍爱生命，远离Coq邪教。 &lt;a class=&quot;internal&quot; href=&quot;http://zhuanlan.zhihu.com/marisa/20439796&quot;&gt;传教文：Coq - The Dairy of Marisa - 知乎专栏&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Coq超级难入门啊。比如我前1024次尝试都以失败告终。装完Coq之后就不知道自己在干什么了，就没找到一个能看的教程。&lt;/p&gt;&lt;p&gt;(以下内容根据官方教程改编。) &lt;/p&gt;&lt;p&gt;不推荐先用CoqIDE或者Proof General &lt;br&gt;&lt;/p&gt;&lt;p&gt;先学会退出&lt;br&gt;&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;$ coqtop
Welcome to Coq ......

Coq &amp;lt; Quit.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;好，现在来证明第一个定理。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;Coq &amp;lt; Theorem my_first_theorem :
Coq &amp;lt;   forall A B C : Prop,
Coq &amp;lt;     (A-&amp;gt;(B-&amp;gt;C)) -&amp;gt; ((A-&amp;gt;B)-&amp;gt;(A-&amp;gt;C)).
1 subgoal
  
  ============================
   forall A B C : Prop, (A -&amp;gt; B -&amp;gt; C) -&amp;gt; (A -&amp;gt; B) -&amp;gt; A -&amp;gt; C

my_first_theorem &amp;lt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输入定理。Coq的显示，============================上方是假设，下方是待证明的命题。我们的目标就是从假设推出待证明的结果。 &lt;/p&gt;&lt;p&gt;先intros A&lt;br&gt;&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;my_first_theorem &amp;lt; intros A.
1 subgoal
  
  A : Prop
  ============================
   forall B C : Prop, (A -&amp;gt; B -&amp;gt; C) -&amp;gt; (A -&amp;gt; B) -&amp;gt; A -&amp;gt; C

my_first_theorem &amp;lt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如下图所示，intros A这一步把我们一个开始的目标不妨称为X，转换成了一个新的目标不妨称为Y，只要证明了Y，我们就能证明X。也就是说，Coq通常证明过程是反着来的，把目标不断改写直到待证明的命题都是显然的或者都出现在上方的假设当中，证明就完成了。 &lt;br&gt;&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;                         intros A A : Prop
======================= &amp;lt;======== =======================
forall A B C : Prop,              forall B C : Prop
(A-&amp;gt;B-&amp;gt;C)-&amp;gt;(A-&amp;gt;B)-&amp;gt;A-&amp;gt;C           (A-&amp;gt;B-&amp;gt;C)-&amp;gt;(A-&amp;gt;B)-&amp;gt;A-&amp;gt;C
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt; 同样的 intros B, intros C&lt;br&gt;&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;my_first_theorem &amp;lt; intros B.
1 subgoal
  
  A : Prop
  B : Prop
  ============================
   forall C : Prop, (A -&amp;gt; B -&amp;gt; C) -&amp;gt; (A -&amp;gt; B) -&amp;gt; A -&amp;gt; C

my_first_theorem &amp;lt; intros C.
1 subgoal
  
  A : Prop
  B : Prop
  C : Prop
  ============================
   (A -&amp;gt; B -&amp;gt; C) -&amp;gt; (A -&amp;gt; B) -&amp;gt; A -&amp;gt; C
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;intros的另一种作用&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;my_first_theorem &amp;lt; intros H0.
1 subgoal
  
  A : Prop
  B : Prop
  C : Prop
  H0 : A -&amp;gt; B -&amp;gt; C
  ============================
   (A -&amp;gt; B) -&amp;gt; A -&amp;gt; C

my_first_theorem &amp;lt; intros H1.
1 subgoal
  
  A : Prop
  B : Prop
  C : Prop
  H0 : A -&amp;gt; B -&amp;gt; C
  H1 : A -&amp;gt; B
  ============================
   A -&amp;gt; C

my_first_theorem &amp;lt; intros H2.
1 subgoal
  
  A : Prop
  B : Prop
  C : Prop
  H0 : A -&amp;gt; B -&amp;gt; C
  H1 : A -&amp;gt; B
  H2 : A
  ============================
   C
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;不妨把上一个目标称为M，下面两个目标称为N。apply H0的意思是，只要证明了N，代入到H0中，我们就能证明M。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;my_first_theorem &amp;lt; apply H0.
2 subgoals
  
  A : Prop
  B : Prop
  C : Prop
  H0 : A -&amp;gt; B -&amp;gt; C
  H1 : A -&amp;gt; B
  H2 : A
  ============================
   A

subgoal 2 is:
 B 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;也就是说，根据A和H0可以得到 B-&amp;gt;C，再根据B可以得到C。 如下图所示&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;                  ...
                  ======
...    apply H0   A
===== &amp;lt;=========
C                 ...
                  ======
                  B

... 表示
  A : Prop
  B : Prop
  C : Prop
  H0 : A -&amp;gt; B -&amp;gt; C
  H1 : A -&amp;gt; B
  H2 : A
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;产生多个目标后，Coq会按顺序让你提供证明。因为H2就是A，所以，exact H2。 &lt;br&gt;&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;my_first_theorem &amp;lt; exact H2.
1 subgoal
  
  A : Prop
  B : Prop
  C : Prop
  H0 : A -&amp;gt; B -&amp;gt; C
  H1 : A -&amp;gt; B
  H2 : A
  ============================
   B

my_first_theorem &amp;lt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt; 类似的。apply H1, exact H2后，剩下一个目标的证明也完成了&lt;br&gt;&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;my_first_theorem &amp;lt; apply H1.
1 subgoal
  
  A : Prop
  B : Prop
  C : Prop
  H0 : A -&amp;gt; B -&amp;gt; C
  H1 : A -&amp;gt; B
  H2 : A
  ============================
   A

my_first_theorem &amp;lt; exact H2.
No more subgoals.

my_first_theorem &amp;lt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt; QED&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;my_first_theorem &amp;lt; Qed.
intros A.
intros B.
intros C.
intros H0.
intros H1.
intros H2.
apply H0.
 exact H2.

 apply H1.
 exact H2.

my_first_theorem is defined

Coq &amp;lt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;反过来，是不是感觉好多了&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;A-&amp;gt;(B-&amp;gt;C), A  A-&amp;gt;B, A
============= =======
B-&amp;gt;C,         B
======================
C

((A-&amp;gt;(B-&amp;gt;C)) /\ (A-&amp;gt;B) /\ A) -&amp;gt; C
===================================
((A-&amp;gt;(B-&amp;gt;C)) /\ (A-&amp;gt;B)) -&amp;gt; (A-&amp;gt;C)
===================================
(A-&amp;gt;(B-&amp;gt;C)) -&amp;gt; ((A-&amp;gt;B) -&amp;gt; (A-&amp;gt;C))

A : Prop
B : Prop
C : Prop
=============================
(A-&amp;gt;(B-&amp;gt;C))-&amp;gt;((A-&amp;gt;B)-&amp;gt;(A-&amp;gt;C))

||
\/

==================================================
forall A B C : Prop, (A-&amp;gt;(B-&amp;gt;C))-&amp;gt;((A-&amp;gt;B)-&amp;gt;(A-&amp;gt;C))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
<author>bhuztez</author>
<guid isPermaLink="false">20441953</guid>
<pubDate>Wed, 23 Dec 2015 22:24:49 +0800</pubDate>
<media:thumbnail url="" />
</item>
<item>
<title>第5个21天</title>
<link>http://zhuanlan.zhihu.com/impress-your-cat/20432737</link>
<description>&lt;p&gt;调整了git仓库的名字，改成book了。GitHub Pages上也加上了链接。重新生成了PDF。&lt;/p&gt;&lt;p&gt;之前老是写完了不满意重写，反反复复两个小节都没写完。现在特别开了skeleton仓库(&lt;a class=&quot; wrap external&quot; href=&quot;https://link.zhihu.com/?target=https%3A//github.com/xn--21Erlang-p00o82pmp3o/skeleton&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;xn--21Erlang-p00o82pmp3o/skeleton · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;)，先把想到的都记下来，降低反馈以及参与的难度。等skeleton里讨论了差不多了再挪到book里。&lt;br&gt;&lt;/p&gt;&lt;p&gt;所以赶紧来吐槽，来补充内容吧。&lt;/p&gt;</description>
<author>bhuztez</author>
<guid isPermaLink="false">20432737</guid>
<pubDate>Sun, 20 Dec 2015 20:30:14 +0800</pubDate>
<media:thumbnail url="" />
</item>
<item>
<title>derecho</title>
<link>http://zhuanlan.zhihu.com/impress-your-cat/20412482</link>
<description>&lt;p&gt;很多公司都在开发自己的监控系统。出发点肯定是现有的并不够好用。而这个看上去很容易嘛，那就自己开发一个。(尽管我不认同这个答案的观点) &lt;a class=&quot;internal&quot; href=&quot;https://www.zhihu.com/question/27464246/answer/75704392&quot;&gt;为什么很多公司都自主开发监控系统？（Linux运维方面） - gashero 的回答&lt;/a&gt; 一针见血的指出了很多公司自己开发的结果是把时间都花在了怎么采集数据，怎么展示上了，往往最后还不如现成的开源的方案。这不就是在浪费时间啊。&lt;br&gt;&lt;/p&gt;&lt;p&gt;我认为他们几乎都掉进了&lt;a class=&quot; wrap external&quot; href=&quot;https://link.zhihu.com/?target=https%3A//en.wikipedia.org/wiki/Inventor%27s_paradox&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Inventor&#39;s paradox&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; 。 毫无疑问，一开始开发的时候，就会以XXX为目标，把所有XXX中需要的功能都山寨一遍，等这个OK了，替换掉XXX，接着开发自己需要的功能。这实际上是没有必要的，无非是自己给自己设限制。&lt;/p&gt;&lt;p&gt;不仅仅是机器的状态，某个端口能不能连上需要监控。更细的，比如统计IP包的Header，看看是不是有人在攻击你的服务，更贴近业务的，比如某个时间段，来自某个地区的访问是不是突然消失了，又比如付钱是不是突然都失败了。这些东西都是监控要做的。&lt;/p&gt;&lt;p&gt;转换到这种思路之后，你就不会再考虑自己去实现采集数据的功能了，因为根本就不知道会有哪些数据，而是反过来，提供一些接口，要求需要使用监控的一方自己来提供数据。有现成开源的采集数据的工具就先用着再说。展示也是类似的，提供一个取数据的接口，至于怎么展示那是需要使用监控的一方自己说了算。&lt;/p&gt;&lt;p&gt;那监控到底要做什么呢？首先当然是报警啦。而很多工具报警的功能就只针对某一个非常小的领域，要加别的类型的报警很不容易，更别说大部分实现实际上报警是定时读一下日志判断要不要报警的。报警不是单纯的发出通知就够了，肯定需要限制发送频率，也肯定需要能合并多个通知。定时读日志尽管产生报警可以做到stateless，发送报警通知是不可能做到stateless，用adhoc, informally-specified, bug-ridden, ...的方式来存这个状态，往往就是导致使用者想自己开发的导火索。&lt;/p&gt;&lt;p&gt;而这些实际上可以用Complex Event Processing/Event Stream Processing(buzzword)的形式统一起来。把一个比较通用的实时事件流分析处理的功能做好了，报警的问题就迎刃而解了。而开发这么一个东西需要的技术，在2000年前后就已经是路人皆知了。现在最推荐的是看&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//web.cecs.pdx.edu/%7Etufte/410-510DS/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Portland State University CS 510-Data Streams&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;这个课程提到的相关资料。&lt;br&gt;&lt;/p&gt;&lt;p&gt;因为等了好多年，发现实在是没有堪用的。于是我决定自己写一个了。毫无疑问，这个语言得选Erlang。很多实现一个stream operator就有一个消息队列，还要弄个scheduler把这几个operator调度来调度去的。用Erlang这些事都省了。&lt;/p&gt;&lt;p&gt;当然了，现在写的这一个derecho并不会是一个实用的版本，因为现在这个还是单机的，而且是完全按顺序处理的。主要是为了尝试一个新想法，既然大部分这种流处理都是DAG，为什么不直接用Erlang代码来写呢，变量之间的依赖关系不刚好是一个DAG么，用List来代替流，测试一个查询的功能更方便直观了。&lt;/p&gt;&lt;p&gt;现在derecho只是刚刚开始，刚刚把第一个例子跑起来。就是一个非常常见的例子，计算某个拍卖物品最高竞拍价格。当你实用streams这个parse_transform的时候，streams:query里面的代码就会被转换成流的查询。而不用parse_transform，那就是对普通的List操作(这个还没写)。&lt;br&gt;&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erlang&quot;&gt;&lt;span class=&quot;nn&quot;&gt;streams&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Bid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;Price&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
          &lt;span class=&quot;nn&quot;&gt;streams&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;groupby&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nn&quot;&gt;streams&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;aggregate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;aggregate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;nv&quot;&gt;Bid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Price&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bid_price&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;欢迎各种Issue/Pull Request&lt;/p&gt;&lt;p&gt;&lt;a class=&quot; wrap external&quot; href=&quot;https://link.zhihu.com/?target=https%3A//github.com/bhuztez/derecho&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;bhuztez/derecho · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;</description>
<author>bhuztez</author>
<guid isPermaLink="false">20412482</guid>
<pubDate>Sat, 12 Dec 2015 23:04:32 +0800</pubDate>
<media:thumbnail url="" />
</item>
<item>
<title>第4个21天</title>
<link>http://zhuanlan.zhihu.com/impress-your-cat/20377683</link>
<description>&lt;p&gt; GitHub Pages上先把英文都删了，因为实在没法看。英文就等大家的Pull Request了。另外，你觉得有任何问题，果断开Issue或者Pull Request。&lt;a class=&quot; wrap external&quot; href=&quot;https://link.zhihu.com/?target=http%3A//xn--21Erlang-p00o82pmp3o.github.io&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;21天学通Erlang&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;按上一个21天所说的那样，删掉了之前照搬McCarthy最早的LISP。而是直接用Erlang了。 代码已经有了，文字内容还没有。&lt;/p&gt;&lt;p&gt;接下来几个21天的主要内容就是赶紧加上Backtracking和Unification变成Prolog。&lt;br&gt;&lt;/p&gt;&lt;p&gt;假如你发现了什么问题，赶紧去报告Issue。假如你有内容写好了，那赶紧来发Pull Request。&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/xn--21Erlang-p00o82pmp3o/erlang-for-dummies-zh-cn&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;xn--21Erlang-p00o82pmp3o/erlang-for-dummies-zh-cn · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;</description>
<author>bhuztez</author>
<guid isPermaLink="false">20377683</guid>
<pubDate>Sun, 29 Nov 2015 23:16:49 +0800</pubDate>
<media:thumbnail url="" />
</item>
<item>
<title>别听萧井陌的 (2)</title>
<link>http://zhuanlan.zhihu.com/impress-your-cat/20357175</link>
<description>&lt;p&gt;最近萧井陌开始了&lt;a href=&quot;http://zhuanlan.zhihu.com/xiao-jing-mo/20353331&quot; class=&quot;internal&quot;&gt;如何写好代码系列 - 萧井陌的专栏 - 知乎专栏&lt;/a&gt; 。不难看出，情况正在往那个著名的笑话 (&lt;a class=&quot; wrap external&quot; href=&quot;https://link.zhihu.com/?target=http%3A//www.infiltec.com/j-h-wrld.htm&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;INFILTEC: HUMOR: &quot;Hello World&quot; programs&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;) 的方向发展，萧井陌正是那个Master Programmer&lt;/p&gt;&lt;p&gt;他举的那个例子，代码并没有他说的那么糟糕，毕竟就这么简单一个功能，还能写成啥样呢？唯一能肯定的问题在于作者并不是很了解Python。一个不是很确定的问题是没有写测试，而是把测试文件放到单独的文件里了，这也很可能是因为不了解Python导致的。&lt;/p&gt;&lt;p&gt;只要作一些微小的修改就已经足够好了&lt;br&gt;&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/usr/bin/env python2&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;__future__&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;print_function&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;json&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;datetime&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;read_json_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;r&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;        &amp;gt;&amp;gt;&amp;gt; USERS = [ {&quot;id&quot;: 167, &quot;name&quot;: &quot;Mike&quot;},&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;        ...           {&quot;id&quot;: 168, &quot;name&quot;: &quot;Joe&quot;},&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;        ...           {&quot;id&quot;: 169, &quot;name&quot;: &quot;Robert&quot;},&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;        ...         ]&lt;/span&gt;

&lt;span class=&quot;sd&quot;&gt;        &amp;gt;&amp;gt;&amp;gt; MESSAGES = [ {&quot;user&quot;: 167, &quot;ts&quot;: 946684800.0, &quot;text&quot;: &quot;Hello, Joe&quot;},&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;        ...              {&quot;user&quot;: 168, &quot;ts&quot;: 946684805.0, &quot;text&quot;: &quot;Hello, Mike&quot;},&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;        ...            ]&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;        &amp;gt;&amp;gt;&amp;gt; main(USERS, MESSAGES)&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;        167 Mike&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;        168 Joe&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;        169 Robert&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;        Sat Jan  1 08:00:00 2000 :&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;            Mike : Hello, Joe&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;        Sat Jan  1 08:00:05 2000 :&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;             Joe : Hello, Mike&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;        &amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    &quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{id} {name}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{time:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%c&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;} :&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{user:&amp;gt;8} : {text}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                  &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fromtimestamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt;
                  &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;user&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]],&lt;/span&gt;
                  &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;__main__&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_json_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;users.json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_json_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;messages.json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这样你只需要运行&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;python2 -m doctest xxx.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;就可以检查例子是否通过了&lt;/p&gt;&lt;p&gt;(正文完) &lt;br&gt;&lt;/p&gt;&lt;p&gt;-------------------------------------- &lt;br&gt;&lt;/p&gt;&lt;p&gt;现在是广告时间&lt;/p&gt;&lt;p&gt;以前脑残的时候，浪费了很长时间比较ORM哪家强。而很多时候，我们只是想利用关系运算把数据关联起来，而不是要ORM那种怪物。所以我写了个玩具库 warm ，用在这里挺合适的。 &lt;br&gt;&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/usr/bin/env python2&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;__future__&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;print_function&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;json&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;datetime&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;warm&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RecordSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DictRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Rows&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;read_json_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;r&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;        &amp;gt;&amp;gt;&amp;gt; USERS = [ {&quot;id&quot;: 167, &quot;name&quot;: &quot;Mike&quot;},&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;        ...           {&quot;id&quot;: 168, &quot;name&quot;: &quot;Joe&quot;},&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;        ...           {&quot;id&quot;: 169, &quot;name&quot;: &quot;Robert&quot;},&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;        ...         ]&lt;/span&gt;

&lt;span class=&quot;sd&quot;&gt;        &amp;gt;&amp;gt;&amp;gt; MESSAGES = [ {&quot;user&quot;: 167, &quot;ts&quot;: 946684800.0, &quot;text&quot;: &quot;Hello, Joe&quot;},&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;        ...              {&quot;user&quot;: 168, &quot;ts&quot;: 946684805.0, &quot;text&quot;: &quot;Hello, Mike&quot;},&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;        ...            ]&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;        &amp;gt;&amp;gt;&amp;gt; main(USERS, MESSAGES)&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;        167 Mike&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;        168 Joe&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;        169 Robert&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;        Sat Jan  1 08:00:00 2000 :&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;            Mike : Hello, Joe&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;        Sat Jan  1 08:00:05 2000 :&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;             Joe : Hello, Mike&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;        &amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    &quot;&quot;&quot;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RecordSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;User&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uniques&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RecordSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Message&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;user_id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;time&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uniques&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;DictRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Rows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;user&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fromtimestamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{user.id} {user.name}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{msg.time:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%c&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;} :&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{msg.user.name:&amp;gt;8} : {msg.text}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;__main__&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_json_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;users.json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;messages&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_json_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;messages.json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;太棒了，正如你所看到的那样，你可以写 msg.user.name 来获得用户名了。只可惜实现是渣。&lt;/p&gt;</description>
<author>bhuztez</author>
<guid isPermaLink="false">20357175</guid>
<pubDate>Fri, 20 Nov 2015 21:51:57 +0800</pubDate>
<media:thumbnail url="" />
</item>
<item>
<title>第3个21天</title>
<link>http://zhuanlan.zhihu.com/impress-your-cat/20354419</link>
<description>&lt;p&gt;最近这段时间发生的各种各样的意外太多，没时间写东西。所以拖了很久，即便如此上一次说要写的东西总该写出来了吧。可是连这也没有，很无奈，我自己也忘了当时的思路是什么，花了好久，也就是到现在才想明白。&lt;/p&gt;&lt;p&gt;另外就是想了一下第一章感觉很别扭的地方该怎么改。本来在Prolog之前会先往miniKanren里绕一下的，当时没想明白怎么去掉这部分内容，现在想了一下，应该不是什么问题。在Prolog之后，原来是突然风格反转从top-down一下子变成了bottom-up，现在想了一下，可以先从只对一个predicate一种情况加tabling开始，这样过渡更自然一点。&lt;/p&gt;&lt;p&gt;就这样吧。 &lt;/p&gt;</description>
<author>bhuztez</author>
<guid isPermaLink="false">20354419</guid>
<pubDate>Thu, 19 Nov 2015 21:03:07 +0800</pubDate>
<media:thumbnail url="" />
</item>
</channel>
</rss>
